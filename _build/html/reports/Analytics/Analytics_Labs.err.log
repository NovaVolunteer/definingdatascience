Traceback (most recent call last):
  File "C:\Users\wat6sv\AppData\Local\miniconda3\Lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\wat6sv\AppData\Local\miniconda3\Lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\wat6sv\AppData\Local\miniconda3\Lib\site-packages\jupyter_core\utils\__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\wat6sv\AppData\Local\miniconda3\Lib\asyncio\base_events.py", line 653, in run_until_complete
    return future.result()
           ^^^^^^^^^^^^^^^
  File "C:\Users\wat6sv\AppData\Local\miniconda3\Lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "C:\Users\wat6sv\AppData\Local\miniconda3\Lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\wat6sv\AppData\Local\miniconda3\Lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import random
random.seed(1984)   # kNN is a random algorithm, so we use `random.seed(x)` to make results repeatable

X_train = Train.drop(['rating_f'], axis=1).values #features
y_train = Train['rating_f'].values #target

neigh = KNeighborsClassifier(n_neighbors=3) #this is the value to change
neigh.fit(X_train, y_train)
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mValueError[0m                                Traceback (most recent call last)
Cell [1;32mIn[18], line 8[0m
[0;32m      5[0m y_train [38;5;241m=[39m Train[[38;5;124m'[39m[38;5;124mrating_f[39m[38;5;124m'[39m][38;5;241m.[39mvalues [38;5;66;03m#target[39;00m
[0;32m      7[0m neigh [38;5;241m=[39m KNeighborsClassifier(n_neighbors[38;5;241m=[39m[38;5;241m3[39m) [38;5;66;03m#this is the value to change[39;00m
[1;32m----> 8[0m [43mneigh[49m[38;5;241;43m.[39;49m[43mfit[49m[43m([49m[43mX_train[49m[43m,[49m[43m [49m[43my_train[49m[43m)[49m

File [1;32m~\AppData\Local\miniconda3\Lib\site-packages\sklearn\neighbors\_classification.py:215[0m, in [0;36mKNeighborsClassifier.fit[1;34m(self, X, y)[0m
[0;32m    196[0m [38;5;250m[39m[38;5;124;03m"""Fit the k-nearest neighbors classifier from the training dataset.[39;00m
[0;32m    197[0m 
[0;32m    198[0m [38;5;124;03mParameters[39;00m
[1;32m   (...)[0m
[0;32m    211[0m [38;5;124;03m    The fitted k-nearest neighbors classifier.[39;00m
[0;32m    212[0m [38;5;124;03m"""[39;00m
[0;32m    213[0m [38;5;28mself[39m[38;5;241m.[39m_validate_params()
[1;32m--> 215[0m [38;5;28;01mreturn[39;00m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_fit[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43my[49m[43m)[49m

File [1;32m~\AppData\Local\miniconda3\Lib\site-packages\sklearn\neighbors\_base.py:454[0m, in [0;36mNeighborsBase._fit[1;34m(self, X, y)[0m
[0;32m    452[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39m_get_tags()[[38;5;124m"[39m[38;5;124mrequires_y[39m[38;5;124m"[39m]:
[0;32m    453[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28misinstance[39m(X, (KDTree, BallTree, NeighborsBase)):
[1;32m--> 454[0m         X, y [38;5;241m=[39m [38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43m_validate_data[49m[43m([49m
[0;32m    455[0m [43m            [49m[43mX[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[43maccept_sparse[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mcsr[39;49m[38;5;124;43m"[39;49m[43m,[49m[43m [49m[43mmulti_output[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m,[49m[43m [49m[43morder[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mC[39;49m[38;5;124;43m"[39;49m
[0;32m    456[0m [43m        [49m[43m)[49m
[0;32m    458[0m     [38;5;28;01mif[39;00m is_classifier([38;5;28mself[39m):
[0;32m    459[0m         [38;5;66;03m# Classification targets require a specific format[39;00m
[0;32m    460[0m         [38;5;28;01mif[39;00m y[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m1[39m [38;5;129;01mor[39;00m y[38;5;241m.[39mndim [38;5;241m==[39m [38;5;241m2[39m [38;5;129;01mand[39;00m y[38;5;241m.[39mshape[[38;5;241m1[39m] [38;5;241m==[39m [38;5;241m1[39m:

File [1;32m~\AppData\Local\miniconda3\Lib\site-packages\sklearn\base.py:584[0m, in [0;36mBaseEstimator._validate_data[1;34m(self, X, y, reset, validate_separately, **check_params)[0m
[0;32m    582[0m         y [38;5;241m=[39m check_array(y, input_name[38;5;241m=[39m[38;5;124m"[39m[38;5;124my[39m[38;5;124m"[39m, [38;5;241m*[39m[38;5;241m*[39mcheck_y_params)
[0;32m    583[0m     [38;5;28;01melse[39;00m:
[1;32m--> 584[0m         X, y [38;5;241m=[39m [43mcheck_X_y[49m[43m([49m[43mX[49m[43m,[49m[43m [49m[43my[49m[43m,[49m[43m [49m[38;5;241;43m*[39;49m[38;5;241;43m*[39;49m[43mcheck_params[49m[43m)[49m
[0;32m    585[0m     out [38;5;241m=[39m X, y
[0;32m    587[0m [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m no_val_X [38;5;129;01mand[39;00m check_params[38;5;241m.[39mget([38;5;124m"[39m[38;5;124mensure_2d[39m[38;5;124m"[39m, [38;5;28;01mTrue[39;00m):

File [1;32m~\AppData\Local\miniconda3\Lib\site-packages\sklearn\utils\validation.py:1106[0m, in [0;36mcheck_X_y[1;34m(X, y, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, multi_output, ensure_min_samples, ensure_min_features, y_numeric, estimator)[0m
[0;32m   1101[0m         estimator_name [38;5;241m=[39m _check_estimator_name(estimator)
[0;32m   1102[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[0;32m   1103[0m         [38;5;124mf[39m[38;5;124m"[39m[38;5;132;01m{[39;00mestimator_name[38;5;132;01m}[39;00m[38;5;124m requires y to be passed, but the target y is None[39m[38;5;124m"[39m
[0;32m   1104[0m     )
[1;32m-> 1106[0m X [38;5;241m=[39m [43mcheck_array[49m[43m([49m
[0;32m   1107[0m [43m    [49m[43mX[49m[43m,[49m
[0;32m   1108[0m [43m    [49m[43maccept_sparse[49m[38;5;241;43m=[39;49m[43maccept_sparse[49m[43m,[49m
[0;32m   1109[0m [43m    [49m[43maccept_large_sparse[49m[38;5;241;43m=[39;49m[43maccept_large_sparse[49m[43m,[49m
[0;32m   1110[0m [43m    [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m
[0;32m   1111[0m [43m    [49m[43morder[49m[38;5;241;43m=[39;49m[43morder[49m[43m,[49m
[0;32m   1112[0m [43m    [49m[43mcopy[49m[38;5;241;43m=[39;49m[43mcopy[49m[43m,[49m
[0;32m   1113[0m [43m    [49m[43mforce_all_finite[49m[38;5;241;43m=[39;49m[43mforce_all_finite[49m[43m,[49m
[0;32m   1114[0m [43m    [49m[43mensure_2d[49m[38;5;241;43m=[39;49m[43mensure_2d[49m[43m,[49m
[0;32m   1115[0m [43m    [49m[43mallow_nd[49m[38;5;241;43m=[39;49m[43mallow_nd[49m[43m,[49m
[0;32m   1116[0m [43m    [49m[43mensure_min_samples[49m[38;5;241;43m=[39;49m[43mensure_min_samples[49m[43m,[49m
[0;32m   1117[0m [43m    [49m[43mensure_min_features[49m[38;5;241;43m=[39;49m[43mensure_min_features[49m[43m,[49m
[0;32m   1118[0m [43m    [49m[43mestimator[49m[38;5;241;43m=[39;49m[43mestimator[49m[43m,[49m
[0;32m   1119[0m [43m    [49m[43minput_name[49m[38;5;241;43m=[39;49m[38;5;124;43m"[39;49m[38;5;124;43mX[39;49m[38;5;124;43m"[39;49m[43m,[49m
[0;32m   1120[0m [43m[49m[43m)[49m
[0;32m   1122[0m y [38;5;241m=[39m _check_y(y, multi_output[38;5;241m=[39mmulti_output, y_numeric[38;5;241m=[39my_numeric, estimator[38;5;241m=[39mestimator)
[0;32m   1124[0m check_consistent_length(X, y)

File [1;32m~\AppData\Local\miniconda3\Lib\site-packages\sklearn\utils\validation.py:879[0m, in [0;36mcheck_array[1;34m(array, accept_sparse, accept_large_sparse, dtype, order, copy, force_all_finite, ensure_2d, allow_nd, ensure_min_samples, ensure_min_features, estimator, input_name)[0m
[0;32m    877[0m         array [38;5;241m=[39m xp[38;5;241m.[39mastype(array, dtype, copy[38;5;241m=[39m[38;5;28;01mFalse[39;00m)
[0;32m    878[0m     [38;5;28;01melse[39;00m:
[1;32m--> 879[0m         array [38;5;241m=[39m [43m_asarray_with_order[49m[43m([49m[43marray[49m[43m,[49m[43m [49m[43morder[49m[38;5;241;43m=[39;49m[43morder[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m,[49m[43m [49m[43mxp[49m[38;5;241;43m=[39;49m[43mxp[49m[43m)[49m
[0;32m    880[0m [38;5;28;01mexcept[39;00m ComplexWarning [38;5;28;01mas[39;00m complex_warning:
[0;32m    881[0m     [38;5;28;01mraise[39;00m [38;5;167;01mValueError[39;00m(
[0;32m    882[0m         [38;5;124m"[39m[38;5;124mComplex data not supported[39m[38;5;130;01m\n[39;00m[38;5;132;01m{}[39;00m[38;5;130;01m\n[39;00m[38;5;124m"[39m[38;5;241m.[39mformat(array)
[0;32m    883[0m     ) [38;5;28;01mfrom[39;00m [38;5;21;01mcomplex_warning[39;00m

File [1;32m~\AppData\Local\miniconda3\Lib\site-packages\sklearn\utils\_array_api.py:185[0m, in [0;36m_asarray_with_order[1;34m(array, dtype, order, copy, xp)[0m
[0;32m    182[0m     xp, _ [38;5;241m=[39m get_namespace(array)
[0;32m    183[0m [38;5;28;01mif[39;00m xp[38;5;241m.[39m[38;5;18m__name__[39m [38;5;129;01min[39;00m {[38;5;124m"[39m[38;5;124mnumpy[39m[38;5;124m"[39m, [38;5;124m"[39m[38;5;124mnumpy.array_api[39m[38;5;124m"[39m}:
[0;32m    184[0m     [38;5;66;03m# Use NumPy API to support order[39;00m
[1;32m--> 185[0m     array [38;5;241m=[39m [43mnumpy[49m[38;5;241;43m.[39;49m[43masarray[49m[43m([49m[43marray[49m[43m,[49m[43m [49m[43morder[49m[38;5;241;43m=[39;49m[43morder[49m[43m,[49m[43m [49m[43mdtype[49m[38;5;241;43m=[39;49m[43mdtype[49m[43m)[49m
[0;32m    186[0m     [38;5;28;01mreturn[39;00m xp[38;5;241m.[39masarray(array, copy[38;5;241m=[39mcopy)
[0;32m    187[0m [38;5;28;01melse[39;00m:

[1;31mValueError[0m: could not convert string to float: 'C'

